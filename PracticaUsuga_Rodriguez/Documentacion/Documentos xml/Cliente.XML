<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cliente</name>
    </assembly>
    <members>
        <member name="M:Cliente.Program.Main">
            <summary>
            Punto de entrada principal para la aplicación.
            </summary>
        </member>
        <member name="T:Cliente.frmCliente">
            <summary>
            Aplicacion cliente de chat
            </summary>
        </member>
        <member name="F:Cliente.frmCliente.cliente">
            <summary>
            La clase TcpClient proporciona métodos sencillos para conectar, enviar y recibir flujos de datos a través de una red en modo de bloqueo sincrónico.
            </summary>
        </member>
        <member name="F:Cliente.frmCliente.streamServidor">
            <summary>
            La clase NetworkStream proporciona métodos para enviar y recibir datos a través de sockets de Stream en modo de bloqueo
            </summary>
        </member>
        <member name="F:Cliente.frmCliente.mensajeChat">
            <summary>
            Mensaje que se envia a la pantalla del chat
            </summary>
        </member>
        <member name="F:Cliente.frmCliente.idNombre">
            <summary>
            Variable que almacena el id del cliente
            </summary>
        </member>
        <member name="M:Cliente.frmCliente.btnConectar_Click(System.Object,System.EventArgs)">
            <summary>
            Conecta al cliente con el servidor de chat
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Cliente.frmCliente.btnEnviar_Click(System.Object,System.EventArgs)">
            <summary>
            Envía un mensaje al servidor
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Cliente.frmCliente.btnDesconectar_Click(System.Object,System.EventArgs)">
            <summary>
            Desconecta nuestra sesion.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Cliente.frmCliente.Chat">
            <summary>
            Cicla indefinidamente el proceso de espera de mensajes por parte del servidor
            </summary>
        </member>
        <member name="M:Cliente.frmCliente.Mensaje">
            <summary>
            Envia el mensaje al TextBox del Chat
            </summary>
        </member>
        <member name="M:Cliente.frmCliente.metodoConectar">
            <sumary>
            metod0 de conexion con el servidor
            </sumary>
        </member>
        <member name="F:Cliente.frmCliente.components">
            <summary>
            Variable del diseñador requerida.
            </summary>
        </member>
        <member name="M:Cliente.frmCliente.Dispose(System.Boolean)">
            <summary>
            Limpiar los recursos que se estén utilizando.
            </summary>
            <param name="disposing">true si los recursos administrados se deben eliminar; false en caso contrario, false.</param>
        </member>
        <member name="M:Cliente.frmCliente.InitializeComponent">
            <summary>
            Método necesario para admitir el Diseñador. No se puede modificar
            el contenido del método con el editor de código.
            </summary>
        </member>
        <member name="T:Cliente.Properties.Resources">
            <summary>
              Clase de recurso con establecimiento inflexible de tipos, para buscar cadenas traducidas, etc.
            </summary>
        </member>
        <member name="P:Cliente.Properties.Resources.ResourceManager">
            <summary>
              Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
            </summary>
        </member>
        <member name="P:Cliente.Properties.Resources.Culture">
            <summary>
              Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
              búsquedas de recursos mediante esta clase de recurso con establecimiento inflexible de tipos.
            </summary>
        </member>
    </members>
</doc>
